  it('d&d обработчики', function () {
    const container = document.createElement('div');
    const presenter = RangeSlider.createRangeSlider(container, {}, {});

    const view = <SliderView>(presenter.viewManager.views[0]);
    const handles = <Handle[]>view.parts.filter((part) => part instanceof Handle);
    const secondHandle = handles[1];

    secondHandle.element.dispatchEvent(new MouseEvent('mousedown', {
      /* bubbles: true, */
      clientX: 100,
      clientY: 100,
    }));
    secondHandle.element.dispatchEvent(new MouseEvent('mousemove', {
      /* bubbles: true, */
      clientX: 200,
      clientY: 200,
    }));
    secondHandle.element.dispatchEvent(new MouseEvent('mouseup', {
      /* bubbles: true, */
      clientX: 0,
      clientY: 0,
    }));

    const actual = presenter.model.data.values[0];
    const expected = 0;

    assert.equal(actual, expected);
  });